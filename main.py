from telegram import Update, ChatPermissions
from telegram.ext import ApplicationBuilder, MessageHandler, ContextTypes, filters
import os
from dotenv import load_dotenv
from ban_words import ban_words

# üö´ –ó–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞
BANNED_WORDS = ban_words

load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = os.getenv("ADMIN_ID")

# üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞
def contains_banned_word(text: str) -> bool:
    text = text.lower()
    return any(word in text for word in BANNED_WORDS)


# üì© –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not update.message:
        return

    text = update.message.text or ""
    user = update.message.from_user
    chat = update.message.chat

    if contains_banned_word(text):
        try:
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await update.message.delete()

            # –ü–µ—Ä–º–∞–Ω–µ–Ω—Ç–Ω—ã–π –º—É—Ç (–≤—Å–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã)
            await context.bot.restrict_chat_member(
                chat_id=chat.id,
                user_id=user.id,
                permissions=ChatPermissions(
                    can_send_messages=False,
                    can_send_audios=False,
                    can_send_documents=False,
                    can_send_photos=False,
                    can_send_videos=False,
                    can_send_video_notes=False,
                    can_send_voice_notes=False,
                    can_send_polls=False,
                    can_send_other_messages=False,
                    can_add_web_page_previews=False,
                    can_change_info=False,
                    can_invite_users=False,
                    can_pin_messages=False,
                    can_manage_topics=False
                )
            )

            # –í—ã–¥–µ–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö —Å–ª–æ–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
            highlighted_text = text
            for word in BANNED_WORDS:
                if word in highlighted_text:
                    highlighted_text = highlighted_text.replace(word, f"*{word}*")

            # –õ–æ–≥ –∞–¥–º–∏–Ω—É (–≤ –õ–°)
            log_msg = (
                f"üö® *–£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏!*\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{user.username or '‚Äî'}\n"
                f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {highlighted_text}\n"
                f"üë• –ì—Ä—É–ø–ø–∞: {chat.title or chat.id}"
            )
            await context.bot.send_message(chat_id=ADMIN_ID, text=log_msg, parse_mode='Markdown')

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}")


# üöÄ –ó–∞–ø—É—Å–∫
if __name__ == '__main__':
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), handle_message))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()